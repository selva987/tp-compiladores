Nonterminals useless in grammar

   var


Grammar

    0 $accept: sigma $end

    1 sigma: lineas

    2 lineas: linea lineas
    3       | %empty

    4 linea: if
    5      | id
    6      | decl

    7 id: T_ID

    8 if: T_IF cond then else

    9 cond: T_PAR_I T_ID T_PAR_D

   10 then: T_LLA_I lineas T_LLA_D

   11 else: T_ELSE T_LLA_I lineas T_LLA_D
   12     | %empty

   13 decl: type vars

   14 type: T_TYPE_NUMBER

   15 vars: id T_COMMA vars
   16     | id


Terminals, with rules where they appear

$end (0) 0
error (256)
T_ID (258) 7 9
T_IF (259) 8
T_LLA_I (260) 10 11
T_LLA_D (261) 10 11
T_PAR_I (262) 9
T_PAR_D (263) 9
T_ELSE (264) 11
T_TYPE_NUMBER (265) 14
T_COMMA (266) 15


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
sigma (13)
    on left: 1, on right: 0
lineas (14)
    on left: 2 3, on right: 1 2 10 11
linea (15)
    on left: 4 5 6, on right: 2
id (16)
    on left: 7, on right: 5 15 16
if (17)
    on left: 8, on right: 4
cond (18)
    on left: 9, on right: 8
then (19)
    on left: 10, on right: 8
else (20)
    on left: 11 12, on right: 8
decl (21)
    on left: 13, on right: 6
type (22)
    on left: 14, on right: 13
vars (23)
    on left: 15 16, on right: 13 15


State 0

    0 $accept: . sigma $end

    T_ID           shift, and go to state 1
    T_IF           shift, and go to state 2
    T_TYPE_NUMBER  shift, and go to state 3

    $default  reduce using rule 3 (lineas)

    sigma   go to state 4
    lineas  go to state 5
    linea   go to state 6
    id      go to state 7
    if      go to state 8
    decl    go to state 9
    type    go to state 10


State 1

    7 id: T_ID .

    $default  reduce using rule 7 (id)


State 2

    8 if: T_IF . cond then else

    T_PAR_I  shift, and go to state 11

    cond  go to state 12


State 3

   14 type: T_TYPE_NUMBER .

    $default  reduce using rule 14 (type)


State 4

    0 $accept: sigma . $end

    $end  shift, and go to state 13


State 5

    1 sigma: lineas .

    $default  reduce using rule 1 (sigma)


State 6

    2 lineas: linea . lineas

    T_ID           shift, and go to state 1
    T_IF           shift, and go to state 2
    T_TYPE_NUMBER  shift, and go to state 3

    $default  reduce using rule 3 (lineas)

    lineas  go to state 14
    linea   go to state 6
    id      go to state 7
    if      go to state 8
    decl    go to state 9
    type    go to state 10


State 7

    5 linea: id .

    $default  reduce using rule 5 (linea)


State 8

    4 linea: if .

    $default  reduce using rule 4 (linea)


State 9

    6 linea: decl .

    $default  reduce using rule 6 (linea)


State 10

   13 decl: type . vars

    T_ID  shift, and go to state 1

    id    go to state 15
    vars  go to state 16


State 11

    9 cond: T_PAR_I . T_ID T_PAR_D

    T_ID  shift, and go to state 17


State 12

    8 if: T_IF cond . then else

    T_LLA_I  shift, and go to state 18

    then  go to state 19


State 13

    0 $accept: sigma $end .

    $default  accept


State 14

    2 lineas: linea lineas .

    $default  reduce using rule 2 (lineas)


State 15

   15 vars: id . T_COMMA vars
   16     | id .

    T_COMMA  shift, and go to state 20

    $default  reduce using rule 16 (vars)


State 16

   13 decl: type vars .

    $default  reduce using rule 13 (decl)


State 17

    9 cond: T_PAR_I T_ID . T_PAR_D

    T_PAR_D  shift, and go to state 21


State 18

   10 then: T_LLA_I . lineas T_LLA_D

    T_ID           shift, and go to state 1
    T_IF           shift, and go to state 2
    T_TYPE_NUMBER  shift, and go to state 3

    $default  reduce using rule 3 (lineas)

    lineas  go to state 22
    linea   go to state 6
    id      go to state 7
    if      go to state 8
    decl    go to state 9
    type    go to state 10


State 19

    8 if: T_IF cond then . else

    T_ELSE  shift, and go to state 23

    $default  reduce using rule 12 (else)

    else  go to state 24


State 20

   15 vars: id T_COMMA . vars

    T_ID  shift, and go to state 1

    id    go to state 15
    vars  go to state 25


State 21

    9 cond: T_PAR_I T_ID T_PAR_D .

    $default  reduce using rule 9 (cond)


State 22

   10 then: T_LLA_I lineas . T_LLA_D

    T_LLA_D  shift, and go to state 26


State 23

   11 else: T_ELSE . T_LLA_I lineas T_LLA_D

    T_LLA_I  shift, and go to state 27


State 24

    8 if: T_IF cond then else .

    $default  reduce using rule 8 (if)


State 25

   15 vars: id T_COMMA vars .

    $default  reduce using rule 15 (vars)


State 26

   10 then: T_LLA_I lineas T_LLA_D .

    $default  reduce using rule 10 (then)


State 27

   11 else: T_ELSE T_LLA_I . lineas T_LLA_D

    T_ID           shift, and go to state 1
    T_IF           shift, and go to state 2
    T_TYPE_NUMBER  shift, and go to state 3

    $default  reduce using rule 3 (lineas)

    lineas  go to state 28
    linea   go to state 6
    id      go to state 7
    if      go to state 8
    decl    go to state 9
    type    go to state 10


State 28

   11 else: T_ELSE T_LLA_I lineas . T_LLA_D

    T_LLA_D  shift, and go to state 29


State 29

   11 else: T_ELSE T_LLA_I lineas T_LLA_D .

    $default  reduce using rule 11 (else)
